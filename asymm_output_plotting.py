# Asymmetric Configuration Results

# Angular Velocity Plots
time = X.t
fig = plt.figure(figsize =(12,6), tight_layout = True)
plt.title(r'$\omega_1$ vs Time (Asymmetrical)', fontsize = 20)
plt.plot(time, w1star_list, color = 'k', linewidth = '3', label = 'reference')
plt.plot(time, w1, linewidth = '3', linestyle = '--', color = 'red', label='tracking')
plt.axvline(x = 12, color = 'orange')
plt.axvline(x = 20, color = 'orange')
plt.ylabel(r'$\omega$ (rad/s)', fontsize = 18)
plt.xlabel('Time (s)', fontsize = 18)
plt.xticks(fontsize = 16)
plt.yticks(fontsize = 16)
plt.legend(fontsize = 16)
plt.grid()
plt.plot()
plt.savefig('w1_proj_asym.png')

fig = plt.figure(figsize =(12,6), tight_layout = True)
plt.title(r'$\omega_2$ vs Time (Asymmetrical)', fontsize = 20)
plt.plot(time, w2star_list, color = 'k', linewidth = '3', label = 'reference')
plt.plot(time, w2, linewidth = '3', linestyle = '--', color = 'red', label='tracking')
plt.axvline(x = 30, color = 'orange')
plt.axvline(x = 38, color = 'orange')
plt.ylabel(r'$\omega$ (rad/s)', fontsize = 18)
plt.xlabel('Time (s)', fontsize = 18)
plt.xticks(fontsize = 16)
plt.yticks(fontsize = 16)
plt.legend(fontsize = 16)
plt.grid()
plt.plot()
plt.savefig('w2_proj_asym.png')

fig = plt.figure(figsize =(12,6), tight_layout = True)
plt.title(r'$\omega_3$ vs Time (Asymmetrical)', fontsize = 20)
plt.plot(time, w3star_list, color = 'k', linewidth = '3', label = 'reference')
plt.plot(time, w3, linewidth = '3', linestyle = '--', color = 'red', label='tracking')
plt.axvline(x = 37, color = 'orange')
plt.axvline(x = 45, color = 'orange')
plt.ylabel(r'$\omega$ (rad/s)', fontsize = 18)
plt.xlabel('Time (s)', fontsize = 18)
plt.xticks(fontsize = 16)
plt.yticks(fontsize = 16)
plt.legend(fontsize = 16)
plt.grid()
plt.plot()
plt.savefig('w3_proj_asym.png')

# Attitude Parameter Plots
fig = plt.figure(figsize =(12,6), tight_layout = True)
plt.title(r'$\mu_1$ vs Time (Asymmetrical)', fontsize = 20)
plt.plot(time, mu1s_list, color = 'k', linewidth = '3', label = 'reference')
plt.plot(time, mu1, linewidth = '3', linestyle = '--', color = 'red', label='tracking')
plt.axvline(x = 12, color = 'orange')
plt.axvline(x = 20, color = 'orange')
plt.ylabel(r'$\mu$ ', fontsize = 18)
plt.xlabel('Time (s)', fontsize = 18)
plt.xticks(fontsize = 16)
plt.yticks(fontsize = 16)
plt.legend(fontsize = 16)
plt.grid()
plt.plot()
plt.savefig('mu1_proj_asym.png')

fig = plt.figure(figsize =(12,6), tight_layout = True)
plt.title(r'$\mu_2$ vs Time (Asymmetrical)', fontsize = 20)
plt.plot(time, mu2s_list, color = 'k', linewidth = '3', label = 'reference')
plt.plot(time, mu2, linewidth = '3', linestyle = '--', color = 'red', label='tracking')
plt.axvline(x = 37, color = 'orange')
plt.axvline(x = 45, color = 'orange')
plt.ylabel(r'$\mu$ ', fontsize = 18)
plt.xlabel('Time (s)', fontsize = 18)
plt.xticks(fontsize = 16)
plt.yticks(fontsize = 16)
plt.legend(fontsize = 16)
plt.grid()
plt.plot()
plt.savefig('mu2_proj_asym.png')

fig = plt.figure(figsize =(12,6), tight_layout = True)
plt.title(r'$\mu_3$ vs Time (Asymmetrical)', fontsize = 20)
plt.plot(time, mu3s_list, color = 'k', linewidth = '3', label = 'reference')
plt.plot(time, mu3, linewidth = '3', linestyle = '--', color = 'red', label='tracking')
plt.axvline(x = 37, color = 'orange')
plt.axvline(x = 45, color = 'orange')
plt.ylabel(r'$\mu$ ', fontsize = 18)
plt.xlabel('Time (s)', fontsize = 18)
plt.xticks(fontsize = 16)
plt.yticks(fontsize = 16)
plt.legend(fontsize = 16)
plt.grid()
plt.plot()
plt.savefig('mu3_proj_asym.png')

# Control Plot
fig = plt.figure(figsize =(12,6), tight_layout = True)
plt.title(r'$u$ vs Time (Asymmetrical)', fontsize = 20)
plt.plot(time, u1_list, color = 'r', linewidth = '3', label = r'$u_1$')
plt.axvline(x = 17, color = 'orange')
plt.axvline(x = 25, color = 'orange')
plt.ylabel(r'$u$ ', fontsize = 18)
plt.xlabel('Time (s)', fontsize = 18)
plt.xticks(fontsize = 16)
plt.yticks(fontsize = 16)
plt.grid()
plt.plot()

plt.plot(time, u2_list, color = 'k', linewidth = '3', label = r'$u_2$')
plt.axvline(x = 17, color = 'orange')
plt.axvline(x = 25, color = 'orange')
plt.ylabel(r'$u$ ', fontsize = 18)
plt.xlabel('Time (s)', fontsize = 18)
plt.xticks(fontsize = 16)
plt.yticks(fontsize = 16)
plt.grid()
plt.plot()

plt.plot(time, u3_list, color = 'g', linewidth = '3', label = r'$u_3$')
plt.axvline(x = 17, color = 'orange')
plt.axvline(x = 25, color = 'orange')
plt.ylabel(r'$u$ ', fontsize = 18)
plt.xlabel('Time (s)', fontsize = 18)
plt.xticks(fontsize = 16)
plt.yticks(fontsize = 16)
plt.legend(fontsize = 15)
plt.grid()
plt.plot()
plt.savefig('Cont_proj_asym.png')

# Lyapunov Function Plot
fig = plt.figure(figsize =(12,6), tight_layout = True)
plt.title(r'$V$ vs Time (Asymmetrical)', fontsize = 20)
plt.plot(time, v_list, color = 'k', linewidth = '3')
plt.axvline(x = 5, color = 'orange')
plt.axvline(x = 13, color = 'orange')
plt.ylabel(r'$V$', fontsize = 18)
plt.xlabel('Time (s)', fontsize = 18)
plt.xticks(fontsize = 16)
plt.yticks(fontsize = 16)
plt.grid()
plt.plot()
plt.savefig('Lyap_proj_asym.png')

# Pyramid Wheel Configuration (h vs t)
fig = plt.figure(figsize =(12,6), tight_layout = True)
plt.title(r'$h$ vs Time for Pyramid Configuration (Asymmetrical)', fontsize = 20)
plt.plot(time, h1_pyr, color = 'r', linewidth = '3', label = r'$h_1$')
plt.ylabel(r'$h$ ', fontsize = 18)
plt.xlabel('Time (s)', fontsize = 18)
plt.xticks(fontsize = 16)
plt.yticks(fontsize = 16)

plt.plot(time, h2_pyr, color = 'k', linewidth = '3', label = r'$h_2$')
plt.ylabel(r'$h$ ', fontsize = 18)
plt.xlabel('Time (s)', fontsize = 18)
plt.xticks(fontsize = 16)
plt.yticks(fontsize = 16)

plt.plot(time, h3_pyr, color = 'g', linewidth = '3', label = r'$h_3$')
plt.ylabel(r'$h$ ', fontsize = 18)
plt.xlabel('Time (s)', fontsize = 18)
plt.xticks(fontsize = 16)
plt.yticks(fontsize = 16)
plt.legend(fontsize = 15)

plt.plot(time, h4_pyr, color = 'b', linewidth = '3', label = r'$h_3$')
plt.ylabel(r'$h$ (Nms)', fontsize = 18)
plt.xlabel('Time (s)', fontsize = 18)
plt.xticks(fontsize = 16)
plt.yticks(fontsize = 16)
plt.legend(fontsize = 15)
plt.grid()
plt.plot()
plt.savefig('h_pyr_proj_asym.png')

# NASA Wheel Configuration (h vs t)
fig = plt.figure(figsize =(12,6), tight_layout = True)
plt.title(r'$h$ vs Time for NASA Configuration (Asymmetrical)', fontsize = 20)
plt.plot(time, h1_nasa, color = 'r', linewidth = '3', label = r'$h_1$')
plt.ylabel(r'$h$ ', fontsize = 18)
plt.xlabel('Time (s)', fontsize = 18)
plt.xticks(fontsize = 16)
plt.yticks(fontsize = 16)

plt.plot(time, h2_nasa, color = 'k', linewidth = '3', label = r'$h_2$')
plt.ylabel(r'$h$ ', fontsize = 18)
plt.xlabel('Time (s)', fontsize = 18)
plt.xticks(fontsize = 16)
plt.yticks(fontsize = 16)

plt.plot(time, h3_nasa, color = 'g', linewidth = '3', label = r'$h_3$')
plt.ylabel(r'$h$ ', fontsize = 18)
plt.xlabel('Time (s)', fontsize = 18)
plt.xticks(fontsize = 16)
plt.yticks(fontsize = 16)
plt.legend(fontsize = 15)

plt.plot(time, h4_nasa, color = 'b', linewidth = '3', label = r'$h_4$')
plt.ylabel(r'$h$ (Nms)', fontsize = 18)
plt.xlabel('Time (s)', fontsize = 18)
plt.xticks(fontsize = 16)
plt.yticks(fontsize = 16)
plt.legend(fontsize = 15)
plt.grid()
plt.plot()
plt.savefig('h_NASA_proj_asym.png')

# 6-Wheel Configuration (h vs t)
fig = plt.figure(figsize =(12,6), tight_layout = True)
plt.title(r'$h$ vs Time for 6 Wheel Configuration (Asymmetrical)', fontsize = 20)
plt.plot(time, h1_6w, color = 'r', linewidth = '3', label = r'$h_1$')
plt.ylabel(r'$h$ ', fontsize = 18)
plt.xlabel('Time (s)', fontsize = 18)
plt.xticks(fontsize = 16)
plt.yticks(fontsize = 16)

plt.plot(time, h2_6w, color = 'k', linewidth = '3', label = r'$h_2$')
plt.ylabel(r'$h$ ', fontsize = 18)
plt.xlabel('Time (s)', fontsize = 18)
plt.xticks(fontsize = 16)
plt.yticks(fontsize = 16)

plt.plot(time, h3_6w, color = 'g', linewidth = '3', label = r'$h_3$')
plt.ylabel(r'$h$ ', fontsize = 18)
plt.xlabel('Time (s)', fontsize = 18)
plt.xticks(fontsize = 16)
plt.yticks(fontsize = 16)
plt.legend(fontsize = 15)

plt.plot(time, h4_6w, color = 'b', linewidth = '3', label = r'$h_4$')
plt.ylabel(r'$h$ ', fontsize = 18)
plt.xlabel('Time (s)', fontsize = 18)
plt.xticks(fontsize = 16)
plt.yticks(fontsize = 16)
plt.legend(fontsize = 15)

plt.plot(time, h5_6w, color = 'c', linewidth = '3', label = r'$h_5$')
plt.ylabel(r'$h$ ', fontsize = 18)
plt.xlabel('Time (s)', fontsize = 18)
plt.xticks(fontsize = 16)
plt.yticks(fontsize = 16)
plt.legend(fontsize = 15)

plt.plot(time, h6_6w, color = 'y', linewidth = '3', label = r'$h_6$')
plt.ylabel(r'$h$ (Nms)', fontsize = 18)
plt.xlabel('Time (s)', fontsize = 18)
plt.xticks(fontsize = 16)
plt.yticks(fontsize = 16)
plt.legend(fontsize = 15)
plt.grid()
plt.plot()
plt.savefig('h_6w_proj_asym.png')


# Norm of H Asymm at t0 (initial time) and tf (final time) for all configs
# Initial s/c ang mom
H_0 = np.linalg.norm(J@w0)
print('H(t_0) (Nms) = ', H_0)

# Final s/c ang mom
wf = np.array([w1[-1], w2[-1], w3[-1]])
H_f = np.linalg.norm(J@wf)
print('H(t_f) (Nms) = ', H_f)

# Final ang mom of 6 wheel
hf_6 = np.array([h1_6w[-1], h2_6w[-1], h3_6w[-1], h4_6w[-1], h5_6w[-1], h6_6w[-1]])
h_f_6 = np.linalg.norm(hf_6)
print('h_6(t_f) (Nms) = ', h_f_6)

# Final ang mom of NASA config
hf_nasa = np.array([h1_nasa[-1], h2_nasa[-1], h3_nasa[-1], h4_nasa[-1],])
h_f_nasa = np.linalg.norm(hf_nasa)
print('h_nasa(t_f) (Nms) = ', h_f_nasa)

# Final ang mom of Pyramid config
hf_pyr = np.array([h1_pyr[-1], h2_pyr[-1], h3_pyr[-1], h4_pyr[-1],])
h_f_pyr = np.linalg.norm(hf_pyr)
print('h_pyr(t_f) (Nms) = ', h_f_pyr)
